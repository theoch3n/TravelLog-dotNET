// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TravelLog.Models;

public partial class TravelLogContext : DbContext
{
    public TravelLogContext(DbContextOptions<TravelLogContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<MemberInformation> MemberInformations { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderStatus> OrderStatuses { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }

    public virtual DbSet<PaymentStatus> PaymentStatuses { get; set; }

    public virtual DbSet<Place> Places { get; set; }

    public virtual DbSet<ProductTicket> ProductTickets { get; set; }

    public virtual DbSet<Schedule> Schedules { get; set; }

    public virtual DbSet<SerialBase> SerialBases { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<TourBundle> TourBundles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Location>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Location__3213E83F908D225E");

            entity.ToTable("Location");

            entity.Property(e => e.Id)
                .HasComment("地點ID")
                .HasColumnName("id");
            entity.Property(e => e.Attraction)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("景點")
                .HasColumnName("attraction");
            entity.Property(e => e.Date)
                .HasComment("日期")
                .HasColumnName("date");
            entity.Property(e => e.ScheduleId)
                .HasComment("行程 ID")
                .HasColumnName("schedule_id");
            entity.Property(e => e.UserId)
                .HasComment("會員 ID")
                .HasColumnName("user_id");
        });

        modelBuilder.Entity<MemberInformation>(entity =>
        {
            entity.HasKey(e => e.MiMemberId).HasName("PK__MemberIn__C80AA2620E1FED0D");

            entity.ToTable("MemberInformation");

            entity.HasIndex(e => e.MiEmail, "UQ__MemberIn__67B108C0D0010E34").IsUnique();

            entity.Property(e => e.MiMemberId).HasColumnName("MI_MemberID");
            entity.Property(e => e.MiAccountName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("MI_AccountName");
            entity.Property(e => e.MiEmail)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("MI_Email");
            entity.Property(e => e.MiEmailConfirmationToken).HasMaxLength(255);
            entity.Property(e => e.MiIsActive)
                .HasDefaultValue(true)
                .HasColumnName("MI_IsActive");
            entity.Property(e => e.MiPasswordHash)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("MI_PasswordHash");
            entity.Property(e => e.MiRegistrationDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("MI_RegistrationDate");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Order__46466601A91F1684");

            entity.ToTable("Order");

            entity.Property(e => e.OrderId)
                .HasComment("訂單 ID")
                .HasColumnName("order_Id");
            entity.Property(e => e.DeleteAt)
                .HasComment("取消訂單時間")
                .HasColumnType("datetime")
                .HasColumnName("delete_at");
            entity.Property(e => e.OrderStatus)
                .HasComment("連接訂單狀態 ID")
                .HasColumnName("order_Status");
            entity.Property(e => e.OrderTime)
                .HasComment("下訂時間")
                .HasColumnType("datetime")
                .HasColumnName("order_Time");
            entity.Property(e => e.OrderTotalAmount)
                .HasComment("訂單總金額")
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("order_TotalAmount");
            entity.Property(e => e.UserId)
                .HasComment("連接用戶 ID")
                .HasColumnName("user_Id");

            entity.HasOne(d => d.OrderStatusNavigation).WithMany(p => p.Orders)
                .HasForeignKey(d => d.OrderStatus)
                .HasConstraintName("FK__Order__order_Sta__6C190EBB");
        });

        modelBuilder.Entity<OrderStatus>(entity =>
        {
            entity.HasKey(e => e.OsId).HasName("PK__Order_St__85A5060D157E2AA6");

            entity.ToTable("Order_Status");

            entity.Property(e => e.OsId)
                .HasComment("訂單狀態 ID")
                .HasColumnName("OS_Id");
            entity.Property(e => e.OsOrderStatus)
                .IsRequired()
                .HasMaxLength(20)
                .HasComment("訂單狀態")
                .HasColumnName("OS_OrderStatus");
        });

        modelBuilder.Entity<Payment>(entity =>
        {
            entity.HasKey(e => e.PaymentId).HasName("PK__Payment__ED10C462454BA82D");

            entity.ToTable("Payment");

            entity.Property(e => e.PaymentId)
                .HasComment("付款 ID")
                .HasColumnName("payment_Id");
            entity.Property(e => e.OrderId)
                .HasComment("連接訂單 ID")
                .HasColumnName("order_id");
            entity.Property(e => e.PaymentDeadline)
                .HasComment("付款期限")
                .HasColumnType("datetime")
                .HasColumnName("payment_Deadline");
            entity.Property(e => e.PaymentMethod)
                .HasComment("連接付款方式 ID")
                .HasColumnName("payment_Method");
            entity.Property(e => e.PaymentStatusId)
                .HasComment("連接付款狀態 ID")
                .HasColumnName("paymentStatus_Id");
            entity.Property(e => e.PaymentTime)
                .HasComment("付款時間")
                .HasColumnType("datetime")
                .HasColumnName("payment_Time");

            entity.HasOne(d => d.Order).WithMany(p => p.Payments)
                .HasForeignKey(d => d.OrderId)
                .HasConstraintName("FK__Payment__order_i__74AE54BC");

            entity.HasOne(d => d.PaymentMethodNavigation).WithMany(p => p.Payments)
                .HasForeignKey(d => d.PaymentMethod)
                .HasConstraintName("FK__Payment__payment__75A278F5");

            entity.HasOne(d => d.PaymentStatus).WithMany(p => p.Payments)
                .HasForeignKey(d => d.PaymentStatusId)
                .HasConstraintName("FK__Payment__payment__76969D2E");
        });

        modelBuilder.Entity<PaymentMethod>(entity =>
        {
            entity.HasKey(e => e.PmId).HasName("PK__Payment___8E8EC76B4C93703B");

            entity.ToTable("Payment_Method");

            entity.Property(e => e.PmId)
                .HasComment("付款方式 ID")
                .HasColumnName("PM_Id");
            entity.Property(e => e.PaymentMethod1)
                .IsRequired()
                .HasMaxLength(20)
                .HasComment("付款方式")
                .HasColumnName("payment_Method");
        });

        modelBuilder.Entity<PaymentStatus>(entity =>
        {
            entity.HasKey(e => e.PsId).HasName("PK__Payment___011947ACED95A9E7");

            entity.ToTable("Payment_Status");

            entity.Property(e => e.PsId)
                .HasComment("付款狀態 ID")
                .HasColumnName("PS_Id");
            entity.Property(e => e.PaymentStatus1)
                .IsRequired()
                .HasMaxLength(20)
                .HasComment("付款狀態")
                .HasColumnName("payment_Status");
        });

        modelBuilder.Entity<Place>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Place__3214EC070B0A9BF0");

            entity.ToTable("Place");

            entity.Property(e => e.Id).HasComment("地點ID");
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("地址");
            entity.Property(e => e.Date)
                .HasComment("第幾天的行程")
                .HasColumnName("date");
            entity.Property(e => e.Latitude).HasComment("經度");
            entity.Property(e => e.Longitude).HasComment("緯度");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("景點名稱");
            entity.Property(e => e.ScheduleId)
                .HasComment("連接行程id")
                .HasColumnName("scheduleId");
        });

        modelBuilder.Entity<ProductTicket>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Product_Ticket");

            entity.Property(e => e.OrderId)
                .HasComment("訂單 ID")
                .HasColumnName("order_Id");
            entity.Property(e => e.ProductId)
                .HasComment("商品 ID")
                .HasColumnName("product_Id");
            entity.Property(e => e.TicketId)
                .HasComment("票券 ID")
                .HasColumnName("ticket_Id");

            entity.HasOne(d => d.Order).WithMany()
                .HasForeignKey(d => d.OrderId)
                .HasConstraintName("FK__Product_T__order__0E6E26BF");
        });

        modelBuilder.Entity<Schedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Schedule__3213E83FFD5256CB");

            entity.ToTable("Schedule");

            entity.Property(e => e.Id)
                .HasComment("ScheduleID")
                .HasColumnName("id");
            entity.Property(e => e.Destination)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("目的地")
                .HasColumnName("destination");
            entity.Property(e => e.EndDate)
                .HasComment("結束日期")
                .HasColumnName("end_date");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("行程名稱")
                .HasColumnName("name");
            entity.Property(e => e.StartDate)
                .HasComment("開始日期")
                .HasColumnName("start_date");
            entity.Property(e => e.UserId)
                .HasComment("會員 ID")
                .HasColumnName("user_id");
        });

        modelBuilder.Entity<SerialBase>(entity =>
        {
            entity.HasKey(e => e.SbSystemCode);

            entity.ToTable("SerialBase");

            entity.Property(e => e.SbSystemCode)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasComment("系統代碼")
                .HasColumnName("SB_SystemCode");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasComment("修改日期")
                .HasColumnType("datetime");
            entity.Property(e => e.SbCount)
                .HasComment("取號總數")
                .HasColumnName("SB_Count");
            entity.Property(e => e.SbSerial)
                .ValueGeneratedOnAdd()
                .HasComment("流水號")
                .HasColumnName("SB_Serial");
            entity.Property(e => e.SbSerialNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasComment("系統編號")
                .HasColumnName("SB_SerialNumber");
            entity.Property(e => e.SbSystemName)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("")
                .HasComment("代碼名稱")
                .HasColumnName("SB_SystemName");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.TicketsId).HasName("PK__Tickets__EE5BBABB2748BF9A");

            entity.Property(e => e.TicketsId).HasComment("票務 ID");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("創建日期")
                .HasColumnType("datetime");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasComment("票務描述");
            entity.Property(e => e.IsAvailable)
                .HasDefaultValue(true)
                .HasComment("票務狀態");
            entity.Property(e => e.Price).HasComment("票務價格");
            entity.Property(e => e.RefundPolicy)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("退款政策");
            entity.Property(e => e.TicketsName)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("票務名稱");
            entity.Property(e => e.TicketsType)
                .IsRequired()
                .HasMaxLength(20)
                .HasComment("票務種類");
        });

        modelBuilder.Entity<TourBundle>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Tour_Bun__3213E83F3A098B8E");

            entity.ToTable("Tour_Bundles");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ContactInfo)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("contactInfo");
            entity.Property(e => e.Destination)
                .IsRequired()
                .HasMaxLength(40)
                .HasColumnName("destination");
            entity.Property(e => e.Duration).HasColumnName("duration");
            entity.Property(e => e.EventDescription)
                .IsRequired()
                .HasMaxLength(500)
                .HasColumnName("eventDescription");
            entity.Property(e => e.EventName)
                .IsRequired()
                .HasMaxLength(40)
                .HasColumnName("eventName");
            entity.Property(e => e.FirstDate)
                .HasColumnType("datetime")
                .HasColumnName("firstDate");
            entity.Property(e => e.LastDate)
                .HasColumnType("datetime")
                .HasColumnName("lastDate");
            entity.Property(e => e.Price).HasColumnName("price");
            entity.Property(e => e.Ratings).HasColumnName("ratings");
            entity.Property(e => e.StartingPoint)
                .IsRequired()
                .HasMaxLength(40)
                .HasColumnName("startingPoint");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}