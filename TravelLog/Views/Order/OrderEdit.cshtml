@model TravelLog.Models.OrderWrap

@{
    ViewData["Title"] = "編輯訂單";

    if (Model == null || Model.order == null) {
                                        <h3 class="text-danger">找不到訂單資料</h3>
        return;
    }

    var order = Model.order;
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="mb-4">編輯訂單</h1>

            <div class="card">
                <div class="card-header">
                    <h4>訂單資料</h4>
                </div>
                <div class="card-body text-dark">
                    <form id="orderEditForm" asp-action="SaveEdit" method="post" novalidate>
                        @Html.AntiForgeryToken()

                        <!-- 隱藏訂單 ID -->
                        <input type="hidden" asp-for="OrderId" />

                        <div class="form-group">
                            <label asp-for="OrderTime" class="control-label"></label>
                            <input asp-for="OrderTime" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="OrderTotalAmount" class="control-label"></label>
                            <input asp-for="OrderTotalAmount" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="DeleteAt" class="control-label"></label>
                            <input asp-for="DeleteAt" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="UserId" class="control-label"></label>
                            <input asp-for="UserId" class="form-control" required />
                            <span asp-validation-for="UserId" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="OrderStatus" class="control-label"></label>
                            <select asp-for="OrderStatus" class="form-control" required>
                                @foreach (var status in Model.OrderStatuses) {
                                    <option value="@status.OsId" selected="@(status.OsId == Model.OrderStatus ? "selected" : null)">
                                        @status.OsOrderStatus
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="OrderStatus" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="OrderPaymentStatus" class="control-label"></label>
                            <select asp-for="OrderPaymentStatus" class="form-control" required>
                                @foreach (var status in Model.PaymentStatuses) {
                                    <option value="@status.PsId" selected="@(status.PsId == Model.OrderPaymentStatus ? "selected" : null)">
                                        @status.PaymentStatus1
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="OrderPaymentStatus" class="text-danger"></span>
                        </div>

                        <div class="form-group mt-4">
                            <input type="submit" value="儲存修改" class="btn btn-primary" />
                            <a asp-controller="Order" asp-action="OrderManage" class="btn btn-danger">取消修改</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("orderEditForm").addEventListener("submit", async function (event) {
                event.preventDefault();

                const formData = new FormData(this);
                const orderWrap = {
                    OrderId: parseInt(formData.get("OrderId")),
                    UserId: parseInt(formData.get("UserId")),
                    OrderStatus: parseInt(formData.get("OrderStatus")),
                    OrderPaymentStatus: parseInt(formData.get("OrderPaymentStatus")),
                };

                try {
                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    const response = await fetch("@Url.Action("SaveEdit", "Order")", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "RequestVerificationToken": token
                        },
                        body: JSON.stringify(orderWrap)
                    });

                    const result = await response.json();
                    if (result.success) {
                        alert("修改成功");
                        window.location.href = "@Url.Action("OrderManage", "Order")";
                    } else {
                        alert("修改失敗：" + result.message);
                    }
                } catch (error) {
                    console.error("發生錯誤:", error);
                    alert("發生錯誤，請稍後再試");
                }
            });
        });
    </script>
}
