@model TravelLog.Models.OrderWrap

@{
    ViewData["Title"] = "編輯訂單";

    if (Model == null || Model.order == null)
    {
        <h3 class="text-danger">找不到訂單資料</h3>
        return;
    }

    var order = Model.order;
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1 class="mb-4">編輯訂單</h1>

            <div class="card">
                <div class="card-header">
                    <h4>訂單資料</h4>
                </div>
                <div class="card-body text-dark">
                    <form id="orderEditForm" asp-action="SaveEdit" method="post">
                        @Html.AntiForgeryToken()

                        <!-- 隱藏訂單 ID -->
                        <input type="hidden" asp-for="OrderId" />

                        <div class="form-group">
                            <label asp-for="OrderTime" class="control-label"></label>
                            <input asp-for="OrderTime" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="OrderTotalAmount" class="control-label"></label>
                            <input asp-for="OrderTotalAmount" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="DeleteAt" class="control-label"></label>
                            <input asp-for="DeleteAt" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="UserId" class="control-label"></label>
                            <input asp-for="UserId" class="form-control" />
                            <span asp-validation-for="UserId" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="OrderStatus" class="control-label"></label>
                            <select asp-for="OrderStatus" class="form-control">
                                @foreach (var status in Model.OrderStatuses)
                                {
                                    <option value="@status.OsId" selected="@(status.OsId == Model.OrderStatus ? "selected" : null)">
                                        @status.OsOrderStatus
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="OrderStatus" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="OrderPaymentStatus" class="control-label"></label>
                            <select asp-for="OrderPaymentStatus" class="form-control">
                                @foreach (var status in Model.PaymentStatuses)
                                {
                                    <option value="@status.PsId" selected="@(status.PsId == Model.OrderPaymentStatus ? "selected" : null)">
                                        @status.PaymentStatus1
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="OrderPaymentStatus" class="text-danger"></span>
                        </div>

                        <div class="form-group mt-4">
                            <input type="submit" value="儲存修改" class="btn btn-primary" />
                            <a asp-controller="Order" asp-action="OrderManage" class="btn btn-danger">取消修改</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#orderEditForm").on("submit", function (e) {
                e.preventDefault(); // 阻止表單默認提交

                // 進行客戶端驗證
                if (!$(this).valid()) {
                    return; // 如果驗證失敗，停止提交
                }

                $.ajax({
                    url: '@Url.Action("SaveEdit", "Order")',
                    type: 'POST',
                    data: $(this).serialize(), // 序列化表單數據
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() // 手動添加防偽令牌
                    },
                    success: function (response) {
                        if (response.success) {
                            // 顯示成功訊息並跳轉
                            alert(response.message);
                            window.location.href = '@Url.Action("OrderManage", "Order")';
                        } else {
                            alert("儲存失敗，請檢查輸入資料");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("發生錯誤，請稍後再試");
                        console.log("錯誤詳情: " + xhr.responseText);
                    }
                });
            });
        });
    </script>
}